// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basic.proto

#include "basic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_math_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vec3Message_math_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_math_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Mat3Message_math_2eproto;
namespace tbBasics {
class CreateActorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateActorMessage> _instance;
} _CreateActorMessage_default_instance_;
class DeleteActorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteActorMessage> _instance;
} _DeleteActorMessage_default_instance_;
class SetCameraMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetCameraMessage> _instance;
} _SetCameraMessage_default_instance_;
class MoveActorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveActorMessage> _instance;
} _MoveActorMessage_default_instance_;
class AnimateActorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnimateActorMessage> _instance;
} _AnimateActorMessage_default_instance_;
class ApplyForceMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplyForceMessage> _instance;
} _ApplyForceMessage_default_instance_;
}  // namespace tbBasics
static void InitDefaultsCreateActorMessage_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_CreateActorMessage_default_instance_;
    new (ptr) ::tbBasics::CreateActorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::CreateActorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateActorMessage_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateActorMessage_basic_2eproto}, {
      &scc_info_Vec3Message_math_2eproto.base,}};

static void InitDefaultsDeleteActorMessage_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_DeleteActorMessage_default_instance_;
    new (ptr) ::tbBasics::DeleteActorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::DeleteActorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteActorMessage_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteActorMessage_basic_2eproto}, {}};

static void InitDefaultsSetCameraMessage_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_SetCameraMessage_default_instance_;
    new (ptr) ::tbBasics::SetCameraMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::SetCameraMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetCameraMessage_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetCameraMessage_basic_2eproto}, {}};

static void InitDefaultsMoveActorMessage_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_MoveActorMessage_default_instance_;
    new (ptr) ::tbBasics::MoveActorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::MoveActorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MoveActorMessage_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMoveActorMessage_basic_2eproto}, {
      &scc_info_Vec3Message_math_2eproto.base,
      &scc_info_Mat3Message_math_2eproto.base,}};

static void InitDefaultsAnimateActorMessage_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_AnimateActorMessage_default_instance_;
    new (ptr) ::tbBasics::AnimateActorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::AnimateActorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AnimateActorMessage_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAnimateActorMessage_basic_2eproto}, {}};

static void InitDefaultsApplyForceMessage_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_ApplyForceMessage_default_instance_;
    new (ptr) ::tbBasics::ApplyForceMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::ApplyForceMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApplyForceMessage_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApplyForceMessage_basic_2eproto}, {
      &scc_info_Vec3Message_math_2eproto.base,}};

void InitDefaults_basic_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateActorMessage_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteActorMessage_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetCameraMessage_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveActorMessage_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnimateActorMessage_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplyForceMessage_basic_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_basic_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_basic_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_basic_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_basic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorMessage, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorMessage, entity_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorMessage, variant_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorMessage, position_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorMessage, rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::DeleteActorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::DeleteActorMessage, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetCameraMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetCameraMessage, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetCameraMessage, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::MoveActorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::MoveActorMessage, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::MoveActorMessage, position_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::MoveActorMessage, rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::AnimateActorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::AnimateActorMessage, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::AnimateActorMessage, animation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::ApplyForceMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::ApplyForceMessage, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::ApplyForceMessage, magnitude_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::ApplyForceMessage, direction_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tbBasics::CreateActorMessage)},
  { 10, -1, sizeof(::tbBasics::DeleteActorMessage)},
  { 16, -1, sizeof(::tbBasics::SetCameraMessage)},
  { 23, -1, sizeof(::tbBasics::MoveActorMessage)},
  { 31, -1, sizeof(::tbBasics::AnimateActorMessage)},
  { 38, -1, sizeof(::tbBasics::ApplyForceMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_CreateActorMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_DeleteActorMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_SetCameraMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_MoveActorMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_AnimateActorMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_ApplyForceMessage_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_basic_2eproto = {
  {}, AddDescriptors_basic_2eproto, "basic.proto", schemas,
  file_default_instances, TableStruct_basic_2eproto::offsets,
  file_level_metadata_basic_2eproto, 6, file_level_enum_descriptors_basic_2eproto, file_level_service_descriptors_basic_2eproto,
};

const char descriptor_table_protodef_basic_2eproto[] =
  "\n\013basic.proto\022\010tbBasics\032\nmath.proto\"\217\001\n\022"
  "CreateActorMessage\022\n\n\002id\030\001 \001(\r\022\016\n\006entity"
  "\030\002 \001(\t\022\017\n\007variant\030\003 \001(\t\022%\n\010position\030\004 \001("
  "\0132\023.tbMath.Vec3Message\022%\n\010rotation\030\005 \001(\013"
  "2\023.tbMath.Vec3Message\" \n\022DeleteActorMess"
  "age\022\n\n\002id\030\001 \001(\r\",\n\020SetCameraMessage\022\n\n\002i"
  "d\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\"l\n\020MoveActorMessag"
  "e\022\n\n\002id\030\001 \001(\r\022%\n\010position\030\002 \001(\0132\023.tbMath"
  ".Vec3Message\022%\n\010rotation\030\003 \001(\0132\023.tbMath."
  "Mat3Message\"4\n\023AnimateActorMessage\022\n\n\002id"
  "\030\001 \001(\r\022\021\n\tanimation\030\002 \001(\t\"Z\n\021ApplyForceM"
  "essage\022\n\n\002id\030\001 \001(\r\022\021\n\tmagnitude\030\002 \001(\002\022&\n"
  "\tdirection\030\003 \001(\0132\023.tbMath.Vec3Messageb\006p"
  "roto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_basic_2eproto = {
  false, InitDefaults_basic_2eproto, 
  descriptor_table_protodef_basic_2eproto,
  "basic.proto", &assign_descriptors_table_basic_2eproto, 525,
};

void AddDescriptors_basic_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_math_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_basic_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_basic_2eproto = []() { AddDescriptors_basic_2eproto(); return true; }();
namespace tbBasics {

// ===================================================================

void CreateActorMessage::InitAsDefaultInstance() {
  ::tbBasics::_CreateActorMessage_default_instance_._instance.get_mutable()->position_ = const_cast< ::tbMath::Vec3Message*>(
      ::tbMath::Vec3Message::internal_default_instance());
  ::tbBasics::_CreateActorMessage_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::tbMath::Vec3Message*>(
      ::tbMath::Vec3Message::internal_default_instance());
}
class CreateActorMessage::HasBitSetters {
 public:
  static const ::tbMath::Vec3Message& position(const CreateActorMessage* msg);
  static const ::tbMath::Vec3Message& rotation(const CreateActorMessage* msg);
};

const ::tbMath::Vec3Message&
CreateActorMessage::HasBitSetters::position(const CreateActorMessage* msg) {
  return *msg->position_;
}
const ::tbMath::Vec3Message&
CreateActorMessage::HasBitSetters::rotation(const CreateActorMessage* msg) {
  return *msg->rotation_;
}
void CreateActorMessage::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void CreateActorMessage::clear_rotation() {
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateActorMessage::kIdFieldNumber;
const int CreateActorMessage::kEntityFieldNumber;
const int CreateActorMessage::kVariantFieldNumber;
const int CreateActorMessage::kPositionFieldNumber;
const int CreateActorMessage::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateActorMessage::CreateActorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.CreateActorMessage)
}
CreateActorMessage::CreateActorMessage(const CreateActorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity().size() > 0) {
    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  variant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.variant().size() > 0) {
    variant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variant_);
  }
  if (from.has_position()) {
    position_ = new ::tbMath::Vec3Message(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_rotation()) {
    rotation_ = new ::tbMath::Vec3Message(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.CreateActorMessage)
}

void CreateActorMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateActorMessage_basic_2eproto.base);
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(id_));
}

CreateActorMessage::~CreateActorMessage() {
  // @@protoc_insertion_point(destructor:tbBasics.CreateActorMessage)
  SharedDtor();
}

void CreateActorMessage::SharedDtor() {
  entity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void CreateActorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateActorMessage& CreateActorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateActorMessage_basic_2eproto.base);
  return *internal_default_instance();
}


void CreateActorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.CreateActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateActorMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateActorMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string entity = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tbBasics.CreateActorMessage.entity");
        object = msg->mutable_entity();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string variant = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tbBasics.CreateActorMessage.variant");
        object = msg->mutable_variant();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .tbMath.Vec3Message position = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Vec3Message::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .tbMath.Vec3Message rotation = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Vec3Message::_InternalParse;
        object = msg->mutable_rotation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateActorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.CreateActorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entity().data(), static_cast<int>(this->entity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tbBasics.CreateActorMessage.entity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string variant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_variant()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->variant().data(), static_cast<int>(this->variant().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tbBasics.CreateActorMessage.variant"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Vec3Message position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Vec3Message rotation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.CreateActorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.CreateActorMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateActorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.CreateActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string entity = 2;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), static_cast<int>(this->entity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.CreateActorMessage.entity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->entity(), output);
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variant().data(), static_cast<int>(this->variant().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.CreateActorMessage.variant");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->variant(), output);
  }

  // .tbMath.Vec3Message position = 4;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::position(this), output);
  }

  // .tbMath.Vec3Message rotation = 5;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::rotation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.CreateActorMessage)
}

::google::protobuf::uint8* CreateActorMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.CreateActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string entity = 2;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), static_cast<int>(this->entity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.CreateActorMessage.entity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->entity(), target);
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variant().data(), static_cast<int>(this->variant().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.CreateActorMessage.variant");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->variant(), target);
  }

  // .tbMath.Vec3Message position = 4;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::position(this), target);
  }

  // .tbMath.Vec3Message rotation = 5;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::rotation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.CreateActorMessage)
  return target;
}

size_t CreateActorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.CreateActorMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entity = 2;
  if (this->entity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entity());
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->variant());
  }

  // .tbMath.Vec3Message position = 4;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .tbMath.Vec3Message rotation = 5;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateActorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.CreateActorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateActorMessage* source =
      ::google::protobuf::DynamicCastToGenerated<CreateActorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.CreateActorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.CreateActorMessage)
    MergeFrom(*source);
  }
}

void CreateActorMessage::MergeFrom(const CreateActorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.CreateActorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity().size() > 0) {

    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  if (from.variant().size() > 0) {

    variant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variant_);
  }
  if (from.has_position()) {
    mutable_position()->::tbMath::Vec3Message::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::tbMath::Vec3Message::MergeFrom(from.rotation());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CreateActorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.CreateActorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateActorMessage::CopyFrom(const CreateActorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.CreateActorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateActorMessage::IsInitialized() const {
  return true;
}

void CreateActorMessage::Swap(CreateActorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateActorMessage::InternalSwap(CreateActorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  entity_.Swap(&other->entity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  variant_.Swap(&other->variant_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata CreateActorMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteActorMessage::InitAsDefaultInstance() {
}
class DeleteActorMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteActorMessage::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteActorMessage::DeleteActorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.DeleteActorMessage)
}
DeleteActorMessage::DeleteActorMessage(const DeleteActorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.DeleteActorMessage)
}

void DeleteActorMessage::SharedCtor() {
  id_ = 0u;
}

DeleteActorMessage::~DeleteActorMessage() {
  // @@protoc_insertion_point(destructor:tbBasics.DeleteActorMessage)
  SharedDtor();
}

void DeleteActorMessage::SharedDtor() {
}

void DeleteActorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteActorMessage& DeleteActorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteActorMessage_basic_2eproto.base);
  return *internal_default_instance();
}


void DeleteActorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.DeleteActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteActorMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteActorMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteActorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.DeleteActorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.DeleteActorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.DeleteActorMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteActorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.DeleteActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.DeleteActorMessage)
}

::google::protobuf::uint8* DeleteActorMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.DeleteActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.DeleteActorMessage)
  return target;
}

size_t DeleteActorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.DeleteActorMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteActorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.DeleteActorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteActorMessage* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteActorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.DeleteActorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.DeleteActorMessage)
    MergeFrom(*source);
  }
}

void DeleteActorMessage::MergeFrom(const DeleteActorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.DeleteActorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DeleteActorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.DeleteActorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteActorMessage::CopyFrom(const DeleteActorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.DeleteActorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteActorMessage::IsInitialized() const {
  return true;
}

void DeleteActorMessage::Swap(DeleteActorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteActorMessage::InternalSwap(DeleteActorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata DeleteActorMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetCameraMessage::InitAsDefaultInstance() {
}
class SetCameraMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetCameraMessage::kIdFieldNumber;
const int SetCameraMessage::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetCameraMessage::SetCameraMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.SetCameraMessage)
}
SetCameraMessage::SetCameraMessage(const SetCameraMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.SetCameraMessage)
}

void SetCameraMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetCameraMessage_basic_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

SetCameraMessage::~SetCameraMessage() {
  // @@protoc_insertion_point(destructor:tbBasics.SetCameraMessage)
  SharedDtor();
}

void SetCameraMessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetCameraMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCameraMessage& SetCameraMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetCameraMessage_basic_2eproto.base);
  return *internal_default_instance();
}


void SetCameraMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.SetCameraMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetCameraMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetCameraMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tbBasics.SetCameraMessage.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetCameraMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.SetCameraMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tbBasics.SetCameraMessage.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.SetCameraMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.SetCameraMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetCameraMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.SetCameraMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.SetCameraMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.SetCameraMessage)
}

::google::protobuf::uint8* SetCameraMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.SetCameraMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.SetCameraMessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.SetCameraMessage)
  return target;
}

size_t SetCameraMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.SetCameraMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCameraMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.SetCameraMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCameraMessage* source =
      ::google::protobuf::DynamicCastToGenerated<SetCameraMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.SetCameraMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.SetCameraMessage)
    MergeFrom(*source);
  }
}

void SetCameraMessage::MergeFrom(const SetCameraMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.SetCameraMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void SetCameraMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.SetCameraMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCameraMessage::CopyFrom(const SetCameraMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.SetCameraMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCameraMessage::IsInitialized() const {
  return true;
}

void SetCameraMessage::Swap(SetCameraMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetCameraMessage::InternalSwap(SetCameraMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

::google::protobuf::Metadata SetCameraMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoveActorMessage::InitAsDefaultInstance() {
  ::tbBasics::_MoveActorMessage_default_instance_._instance.get_mutable()->position_ = const_cast< ::tbMath::Vec3Message*>(
      ::tbMath::Vec3Message::internal_default_instance());
  ::tbBasics::_MoveActorMessage_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::tbMath::Mat3Message*>(
      ::tbMath::Mat3Message::internal_default_instance());
}
class MoveActorMessage::HasBitSetters {
 public:
  static const ::tbMath::Vec3Message& position(const MoveActorMessage* msg);
  static const ::tbMath::Mat3Message& rotation(const MoveActorMessage* msg);
};

const ::tbMath::Vec3Message&
MoveActorMessage::HasBitSetters::position(const MoveActorMessage* msg) {
  return *msg->position_;
}
const ::tbMath::Mat3Message&
MoveActorMessage::HasBitSetters::rotation(const MoveActorMessage* msg) {
  return *msg->rotation_;
}
void MoveActorMessage::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void MoveActorMessage::clear_rotation() {
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveActorMessage::kIdFieldNumber;
const int MoveActorMessage::kPositionFieldNumber;
const int MoveActorMessage::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveActorMessage::MoveActorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.MoveActorMessage)
}
MoveActorMessage::MoveActorMessage(const MoveActorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::tbMath::Vec3Message(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_rotation()) {
    rotation_ = new ::tbMath::Mat3Message(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.MoveActorMessage)
}

void MoveActorMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoveActorMessage_basic_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(id_));
}

MoveActorMessage::~MoveActorMessage() {
  // @@protoc_insertion_point(destructor:tbBasics.MoveActorMessage)
  SharedDtor();
}

void MoveActorMessage::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void MoveActorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoveActorMessage& MoveActorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoveActorMessage_basic_2eproto.base);
  return *internal_default_instance();
}


void MoveActorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.MoveActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoveActorMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoveActorMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .tbMath.Vec3Message position = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Vec3Message::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .tbMath.Mat3Message rotation = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Mat3Message::_InternalParse;
        object = msg->mutable_rotation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoveActorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.MoveActorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Vec3Message position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Mat3Message rotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.MoveActorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.MoveActorMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoveActorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.MoveActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .tbMath.Vec3Message position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::position(this), output);
  }

  // .tbMath.Mat3Message rotation = 3;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::rotation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.MoveActorMessage)
}

::google::protobuf::uint8* MoveActorMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.MoveActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .tbMath.Vec3Message position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::position(this), target);
  }

  // .tbMath.Mat3Message rotation = 3;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::rotation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.MoveActorMessage)
  return target;
}

size_t MoveActorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.MoveActorMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tbMath.Vec3Message position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .tbMath.Mat3Message rotation = 3;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveActorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.MoveActorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveActorMessage* source =
      ::google::protobuf::DynamicCastToGenerated<MoveActorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.MoveActorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.MoveActorMessage)
    MergeFrom(*source);
  }
}

void MoveActorMessage::MergeFrom(const MoveActorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.MoveActorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::tbMath::Vec3Message::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::tbMath::Mat3Message::MergeFrom(from.rotation());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MoveActorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.MoveActorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveActorMessage::CopyFrom(const MoveActorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.MoveActorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveActorMessage::IsInitialized() const {
  return true;
}

void MoveActorMessage::Swap(MoveActorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveActorMessage::InternalSwap(MoveActorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata MoveActorMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AnimateActorMessage::InitAsDefaultInstance() {
}
class AnimateActorMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnimateActorMessage::kIdFieldNumber;
const int AnimateActorMessage::kAnimationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnimateActorMessage::AnimateActorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.AnimateActorMessage)
}
AnimateActorMessage::AnimateActorMessage(const AnimateActorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  animation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.animation().size() > 0) {
    animation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.animation_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.AnimateActorMessage)
}

void AnimateActorMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnimateActorMessage_basic_2eproto.base);
  animation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

AnimateActorMessage::~AnimateActorMessage() {
  // @@protoc_insertion_point(destructor:tbBasics.AnimateActorMessage)
  SharedDtor();
}

void AnimateActorMessage::SharedDtor() {
  animation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnimateActorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnimateActorMessage& AnimateActorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnimateActorMessage_basic_2eproto.base);
  return *internal_default_instance();
}


void AnimateActorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.AnimateActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  animation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnimateActorMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnimateActorMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string animation = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tbBasics.AnimateActorMessage.animation");
        object = msg->mutable_animation();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnimateActorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.AnimateActorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string animation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_animation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->animation().data(), static_cast<int>(this->animation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tbBasics.AnimateActorMessage.animation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.AnimateActorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.AnimateActorMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnimateActorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.AnimateActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string animation = 2;
  if (this->animation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->animation().data(), static_cast<int>(this->animation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.AnimateActorMessage.animation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->animation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.AnimateActorMessage)
}

::google::protobuf::uint8* AnimateActorMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.AnimateActorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string animation = 2;
  if (this->animation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->animation().data(), static_cast<int>(this->animation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.AnimateActorMessage.animation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->animation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.AnimateActorMessage)
  return target;
}

size_t AnimateActorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.AnimateActorMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string animation = 2;
  if (this->animation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->animation());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnimateActorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.AnimateActorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AnimateActorMessage* source =
      ::google::protobuf::DynamicCastToGenerated<AnimateActorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.AnimateActorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.AnimateActorMessage)
    MergeFrom(*source);
  }
}

void AnimateActorMessage::MergeFrom(const AnimateActorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.AnimateActorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.animation().size() > 0) {

    animation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.animation_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void AnimateActorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.AnimateActorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimateActorMessage::CopyFrom(const AnimateActorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.AnimateActorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnimateActorMessage::IsInitialized() const {
  return true;
}

void AnimateActorMessage::Swap(AnimateActorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnimateActorMessage::InternalSwap(AnimateActorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  animation_.Swap(&other->animation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

::google::protobuf::Metadata AnimateActorMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ApplyForceMessage::InitAsDefaultInstance() {
  ::tbBasics::_ApplyForceMessage_default_instance_._instance.get_mutable()->direction_ = const_cast< ::tbMath::Vec3Message*>(
      ::tbMath::Vec3Message::internal_default_instance());
}
class ApplyForceMessage::HasBitSetters {
 public:
  static const ::tbMath::Vec3Message& direction(const ApplyForceMessage* msg);
};

const ::tbMath::Vec3Message&
ApplyForceMessage::HasBitSetters::direction(const ApplyForceMessage* msg) {
  return *msg->direction_;
}
void ApplyForceMessage::clear_direction() {
  if (GetArenaNoVirtual() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyForceMessage::kIdFieldNumber;
const int ApplyForceMessage::kMagnitudeFieldNumber;
const int ApplyForceMessage::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyForceMessage::ApplyForceMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.ApplyForceMessage)
}
ApplyForceMessage::ApplyForceMessage(const ApplyForceMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_direction()) {
    direction_ = new ::tbMath::Vec3Message(*from.direction_);
  } else {
    direction_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&magnitude_) -
    reinterpret_cast<char*>(&id_)) + sizeof(magnitude_));
  // @@protoc_insertion_point(copy_constructor:tbBasics.ApplyForceMessage)
}

void ApplyForceMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApplyForceMessage_basic_2eproto.base);
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&magnitude_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(magnitude_));
}

ApplyForceMessage::~ApplyForceMessage() {
  // @@protoc_insertion_point(destructor:tbBasics.ApplyForceMessage)
  SharedDtor();
}

void ApplyForceMessage::SharedDtor() {
  if (this != internal_default_instance()) delete direction_;
}

void ApplyForceMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplyForceMessage& ApplyForceMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApplyForceMessage_basic_2eproto.base);
  return *internal_default_instance();
}


void ApplyForceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.ApplyForceMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&magnitude_) -
      reinterpret_cast<char*>(&id_)) + sizeof(magnitude_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplyForceMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApplyForceMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float magnitude = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_magnitude(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // .tbMath.Vec3Message direction = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Vec3Message::_InternalParse;
        object = msg->mutable_direction();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplyForceMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.ApplyForceMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float magnitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &magnitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Vec3Message direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.ApplyForceMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.ApplyForceMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplyForceMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.ApplyForceMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->magnitude(), output);
  }

  // .tbMath.Vec3Message direction = 3;
  if (this->has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::direction(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.ApplyForceMessage)
}

::google::protobuf::uint8* ApplyForceMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.ApplyForceMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->magnitude(), target);
  }

  // .tbMath.Vec3Message direction = 3;
  if (this->has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::direction(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.ApplyForceMessage)
  return target;
}

size_t ApplyForceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.ApplyForceMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tbMath.Vec3Message direction = 3;
  if (this->has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyForceMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.ApplyForceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyForceMessage* source =
      ::google::protobuf::DynamicCastToGenerated<ApplyForceMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.ApplyForceMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.ApplyForceMessage)
    MergeFrom(*source);
  }
}

void ApplyForceMessage::MergeFrom(const ApplyForceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.ApplyForceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_direction()) {
    mutable_direction()->::tbMath::Vec3Message::MergeFrom(from.direction());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.magnitude() != 0) {
    set_magnitude(from.magnitude());
  }
}

void ApplyForceMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.ApplyForceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyForceMessage::CopyFrom(const ApplyForceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.ApplyForceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyForceMessage::IsInitialized() const {
  return true;
}

void ApplyForceMessage::Swap(ApplyForceMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyForceMessage::InternalSwap(ApplyForceMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(direction_, other->direction_);
  swap(id_, other->id_);
  swap(magnitude_, other->magnitude_);
}

::google::protobuf::Metadata ApplyForceMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tbBasics
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::tbBasics::CreateActorMessage* Arena::CreateMaybeMessage< ::tbBasics::CreateActorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::CreateActorMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::DeleteActorMessage* Arena::CreateMaybeMessage< ::tbBasics::DeleteActorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::DeleteActorMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::SetCameraMessage* Arena::CreateMaybeMessage< ::tbBasics::SetCameraMessage >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::SetCameraMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::MoveActorMessage* Arena::CreateMaybeMessage< ::tbBasics::MoveActorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::MoveActorMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::AnimateActorMessage* Arena::CreateMaybeMessage< ::tbBasics::AnimateActorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::AnimateActorMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::ApplyForceMessage* Arena::CreateMaybeMessage< ::tbBasics::ApplyForceMessage >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::ApplyForceMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
