// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basic.proto

#include "basic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_math_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vec3Message_math_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_math_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Mat3Message_math_2eproto;
namespace tbBasics {
class CreateActorBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateActorBody> _instance;
} _CreateActorBody_default_instance_;
class DeleteActorBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteActorBody> _instance;
} _DeleteActorBody_default_instance_;
class SetCameraBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetCameraBody> _instance;
} _SetCameraBody_default_instance_;
class MoveActorBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveActorBody> _instance;
} _MoveActorBody_default_instance_;
class SetActorAnimationBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetActorAnimationBody> _instance;
} _SetActorAnimationBody_default_instance_;
class ApplyPhysicsBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplyPhysicsBody> _instance;
} _ApplyPhysicsBody_default_instance_;
}  // namespace tbBasics
static void InitDefaultsCreateActorBody_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_CreateActorBody_default_instance_;
    new (ptr) ::tbBasics::CreateActorBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::CreateActorBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateActorBody_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateActorBody_basic_2eproto}, {
      &scc_info_Vec3Message_math_2eproto.base,}};

static void InitDefaultsDeleteActorBody_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_DeleteActorBody_default_instance_;
    new (ptr) ::tbBasics::DeleteActorBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::DeleteActorBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteActorBody_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteActorBody_basic_2eproto}, {}};

static void InitDefaultsSetCameraBody_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_SetCameraBody_default_instance_;
    new (ptr) ::tbBasics::SetCameraBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::SetCameraBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetCameraBody_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetCameraBody_basic_2eproto}, {}};

static void InitDefaultsMoveActorBody_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_MoveActorBody_default_instance_;
    new (ptr) ::tbBasics::MoveActorBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::MoveActorBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MoveActorBody_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMoveActorBody_basic_2eproto}, {
      &scc_info_Vec3Message_math_2eproto.base,
      &scc_info_Mat3Message_math_2eproto.base,}};

static void InitDefaultsSetActorAnimationBody_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_SetActorAnimationBody_default_instance_;
    new (ptr) ::tbBasics::SetActorAnimationBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::SetActorAnimationBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetActorAnimationBody_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetActorAnimationBody_basic_2eproto}, {}};

static void InitDefaultsApplyPhysicsBody_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tbBasics::_ApplyPhysicsBody_default_instance_;
    new (ptr) ::tbBasics::ApplyPhysicsBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tbBasics::ApplyPhysicsBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApplyPhysicsBody_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApplyPhysicsBody_basic_2eproto}, {
      &scc_info_Vec3Message_math_2eproto.base,}};

void InitDefaults_basic_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateActorBody_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteActorBody_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetCameraBody_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveActorBody_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetActorAnimationBody_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplyPhysicsBody_basic_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_basic_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_basic_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_basic_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_basic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorBody, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorBody, entity_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorBody, variant_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorBody, position_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::CreateActorBody, rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::DeleteActorBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::DeleteActorBody, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetCameraBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetCameraBody, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetCameraBody, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::MoveActorBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::MoveActorBody, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::MoveActorBody, position_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::MoveActorBody, rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetActorAnimationBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetActorAnimationBody, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::SetActorAnimationBody, animation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tbBasics::ApplyPhysicsBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tbBasics::ApplyPhysicsBody, id_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::ApplyPhysicsBody, magnitude_),
  PROTOBUF_FIELD_OFFSET(::tbBasics::ApplyPhysicsBody, direction_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tbBasics::CreateActorBody)},
  { 10, -1, sizeof(::tbBasics::DeleteActorBody)},
  { 16, -1, sizeof(::tbBasics::SetCameraBody)},
  { 23, -1, sizeof(::tbBasics::MoveActorBody)},
  { 31, -1, sizeof(::tbBasics::SetActorAnimationBody)},
  { 38, -1, sizeof(::tbBasics::ApplyPhysicsBody)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_CreateActorBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_DeleteActorBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_SetCameraBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_MoveActorBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_SetActorAnimationBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tbBasics::_ApplyPhysicsBody_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_basic_2eproto = {
  {}, AddDescriptors_basic_2eproto, "basic.proto", schemas,
  file_default_instances, TableStruct_basic_2eproto::offsets,
  file_level_metadata_basic_2eproto, 6, file_level_enum_descriptors_basic_2eproto, file_level_service_descriptors_basic_2eproto,
};

const char descriptor_table_protodef_basic_2eproto[] =
  "\n\013basic.proto\022\010tbBasics\032\nmath.proto\"\214\001\n\017"
  "CreateActorBody\022\n\n\002id\030\001 \001(\r\022\016\n\006entity\030\002 "
  "\001(\t\022\017\n\007variant\030\003 \001(\t\022%\n\010position\030\004 \001(\0132\023"
  ".tbMath.Vec3Message\022%\n\010rotation\030\005 \001(\0132\023."
  "tbMath.Vec3Message\"\035\n\017DeleteActorBody\022\n\n"
  "\002id\030\001 \001(\r\")\n\rSetCameraBody\022\n\n\002id\030\001 \001(\r\022\014"
  "\n\004name\030\002 \001(\t\"i\n\rMoveActorBody\022\n\n\002id\030\001 \001("
  "\r\022%\n\010position\030\002 \001(\0132\023.tbMath.Vec3Message"
  "\022%\n\010rotation\030\003 \001(\0132\023.tbMath.Mat3Message\""
  "6\n\025SetActorAnimationBody\022\n\n\002id\030\001 \001(\r\022\021\n\t"
  "animation\030\002 \001(\t\"Y\n\020ApplyPhysicsBody\022\n\n\002i"
  "d\030\001 \001(\r\022\021\n\tmagnitude\030\002 \001(\002\022&\n\tdirection\030"
  "\003 \001(\0132\023.tbMath.Vec3Messageb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_basic_2eproto = {
  false, InitDefaults_basic_2eproto, 
  descriptor_table_protodef_basic_2eproto,
  "basic.proto", &assign_descriptors_table_basic_2eproto, 514,
};

void AddDescriptors_basic_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_math_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_basic_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_basic_2eproto = []() { AddDescriptors_basic_2eproto(); return true; }();
namespace tbBasics {

// ===================================================================

void CreateActorBody::InitAsDefaultInstance() {
  ::tbBasics::_CreateActorBody_default_instance_._instance.get_mutable()->position_ = const_cast< ::tbMath::Vec3Message*>(
      ::tbMath::Vec3Message::internal_default_instance());
  ::tbBasics::_CreateActorBody_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::tbMath::Vec3Message*>(
      ::tbMath::Vec3Message::internal_default_instance());
}
class CreateActorBody::HasBitSetters {
 public:
  static const ::tbMath::Vec3Message& position(const CreateActorBody* msg);
  static const ::tbMath::Vec3Message& rotation(const CreateActorBody* msg);
};

const ::tbMath::Vec3Message&
CreateActorBody::HasBitSetters::position(const CreateActorBody* msg) {
  return *msg->position_;
}
const ::tbMath::Vec3Message&
CreateActorBody::HasBitSetters::rotation(const CreateActorBody* msg) {
  return *msg->rotation_;
}
void CreateActorBody::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void CreateActorBody::clear_rotation() {
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateActorBody::kIdFieldNumber;
const int CreateActorBody::kEntityFieldNumber;
const int CreateActorBody::kVariantFieldNumber;
const int CreateActorBody::kPositionFieldNumber;
const int CreateActorBody::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateActorBody::CreateActorBody()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.CreateActorBody)
}
CreateActorBody::CreateActorBody(const CreateActorBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity().size() > 0) {
    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  variant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.variant().size() > 0) {
    variant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variant_);
  }
  if (from.has_position()) {
    position_ = new ::tbMath::Vec3Message(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_rotation()) {
    rotation_ = new ::tbMath::Vec3Message(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.CreateActorBody)
}

void CreateActorBody::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateActorBody_basic_2eproto.base);
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(id_));
}

CreateActorBody::~CreateActorBody() {
  // @@protoc_insertion_point(destructor:tbBasics.CreateActorBody)
  SharedDtor();
}

void CreateActorBody::SharedDtor() {
  entity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void CreateActorBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateActorBody& CreateActorBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateActorBody_basic_2eproto.base);
  return *internal_default_instance();
}


void CreateActorBody::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.CreateActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateActorBody::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateActorBody*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string entity = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tbBasics.CreateActorBody.entity");
        object = msg->mutable_entity();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string variant = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tbBasics.CreateActorBody.variant");
        object = msg->mutable_variant();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .tbMath.Vec3Message position = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Vec3Message::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .tbMath.Vec3Message rotation = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Vec3Message::_InternalParse;
        object = msg->mutable_rotation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateActorBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.CreateActorBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entity().data(), static_cast<int>(this->entity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tbBasics.CreateActorBody.entity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string variant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_variant()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->variant().data(), static_cast<int>(this->variant().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tbBasics.CreateActorBody.variant"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Vec3Message position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Vec3Message rotation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.CreateActorBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.CreateActorBody)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateActorBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.CreateActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string entity = 2;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), static_cast<int>(this->entity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.CreateActorBody.entity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->entity(), output);
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variant().data(), static_cast<int>(this->variant().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.CreateActorBody.variant");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->variant(), output);
  }

  // .tbMath.Vec3Message position = 4;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::position(this), output);
  }

  // .tbMath.Vec3Message rotation = 5;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::rotation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.CreateActorBody)
}

::google::protobuf::uint8* CreateActorBody::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.CreateActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string entity = 2;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), static_cast<int>(this->entity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.CreateActorBody.entity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->entity(), target);
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variant().data(), static_cast<int>(this->variant().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.CreateActorBody.variant");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->variant(), target);
  }

  // .tbMath.Vec3Message position = 4;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::position(this), target);
  }

  // .tbMath.Vec3Message rotation = 5;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::rotation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.CreateActorBody)
  return target;
}

size_t CreateActorBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.CreateActorBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entity = 2;
  if (this->entity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entity());
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->variant());
  }

  // .tbMath.Vec3Message position = 4;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .tbMath.Vec3Message rotation = 5;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateActorBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.CreateActorBody)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateActorBody* source =
      ::google::protobuf::DynamicCastToGenerated<CreateActorBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.CreateActorBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.CreateActorBody)
    MergeFrom(*source);
  }
}

void CreateActorBody::MergeFrom(const CreateActorBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.CreateActorBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity().size() > 0) {

    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  if (from.variant().size() > 0) {

    variant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variant_);
  }
  if (from.has_position()) {
    mutable_position()->::tbMath::Vec3Message::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::tbMath::Vec3Message::MergeFrom(from.rotation());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CreateActorBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.CreateActorBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateActorBody::CopyFrom(const CreateActorBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.CreateActorBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateActorBody::IsInitialized() const {
  return true;
}

void CreateActorBody::Swap(CreateActorBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateActorBody::InternalSwap(CreateActorBody* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  entity_.Swap(&other->entity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  variant_.Swap(&other->variant_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata CreateActorBody::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteActorBody::InitAsDefaultInstance() {
}
class DeleteActorBody::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteActorBody::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteActorBody::DeleteActorBody()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.DeleteActorBody)
}
DeleteActorBody::DeleteActorBody(const DeleteActorBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.DeleteActorBody)
}

void DeleteActorBody::SharedCtor() {
  id_ = 0u;
}

DeleteActorBody::~DeleteActorBody() {
  // @@protoc_insertion_point(destructor:tbBasics.DeleteActorBody)
  SharedDtor();
}

void DeleteActorBody::SharedDtor() {
}

void DeleteActorBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteActorBody& DeleteActorBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteActorBody_basic_2eproto.base);
  return *internal_default_instance();
}


void DeleteActorBody::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.DeleteActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteActorBody::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteActorBody*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteActorBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.DeleteActorBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.DeleteActorBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.DeleteActorBody)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteActorBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.DeleteActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.DeleteActorBody)
}

::google::protobuf::uint8* DeleteActorBody::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.DeleteActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.DeleteActorBody)
  return target;
}

size_t DeleteActorBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.DeleteActorBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteActorBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.DeleteActorBody)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteActorBody* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteActorBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.DeleteActorBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.DeleteActorBody)
    MergeFrom(*source);
  }
}

void DeleteActorBody::MergeFrom(const DeleteActorBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.DeleteActorBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DeleteActorBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.DeleteActorBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteActorBody::CopyFrom(const DeleteActorBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.DeleteActorBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteActorBody::IsInitialized() const {
  return true;
}

void DeleteActorBody::Swap(DeleteActorBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteActorBody::InternalSwap(DeleteActorBody* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata DeleteActorBody::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetCameraBody::InitAsDefaultInstance() {
}
class SetCameraBody::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetCameraBody::kIdFieldNumber;
const int SetCameraBody::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetCameraBody::SetCameraBody()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.SetCameraBody)
}
SetCameraBody::SetCameraBody(const SetCameraBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.SetCameraBody)
}

void SetCameraBody::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetCameraBody_basic_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

SetCameraBody::~SetCameraBody() {
  // @@protoc_insertion_point(destructor:tbBasics.SetCameraBody)
  SharedDtor();
}

void SetCameraBody::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetCameraBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCameraBody& SetCameraBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetCameraBody_basic_2eproto.base);
  return *internal_default_instance();
}


void SetCameraBody::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.SetCameraBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetCameraBody::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetCameraBody*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tbBasics.SetCameraBody.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetCameraBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.SetCameraBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tbBasics.SetCameraBody.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.SetCameraBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.SetCameraBody)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetCameraBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.SetCameraBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.SetCameraBody.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.SetCameraBody)
}

::google::protobuf::uint8* SetCameraBody::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.SetCameraBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.SetCameraBody.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.SetCameraBody)
  return target;
}

size_t SetCameraBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.SetCameraBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCameraBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.SetCameraBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCameraBody* source =
      ::google::protobuf::DynamicCastToGenerated<SetCameraBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.SetCameraBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.SetCameraBody)
    MergeFrom(*source);
  }
}

void SetCameraBody::MergeFrom(const SetCameraBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.SetCameraBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void SetCameraBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.SetCameraBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCameraBody::CopyFrom(const SetCameraBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.SetCameraBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCameraBody::IsInitialized() const {
  return true;
}

void SetCameraBody::Swap(SetCameraBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetCameraBody::InternalSwap(SetCameraBody* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

::google::protobuf::Metadata SetCameraBody::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoveActorBody::InitAsDefaultInstance() {
  ::tbBasics::_MoveActorBody_default_instance_._instance.get_mutable()->position_ = const_cast< ::tbMath::Vec3Message*>(
      ::tbMath::Vec3Message::internal_default_instance());
  ::tbBasics::_MoveActorBody_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::tbMath::Mat3Message*>(
      ::tbMath::Mat3Message::internal_default_instance());
}
class MoveActorBody::HasBitSetters {
 public:
  static const ::tbMath::Vec3Message& position(const MoveActorBody* msg);
  static const ::tbMath::Mat3Message& rotation(const MoveActorBody* msg);
};

const ::tbMath::Vec3Message&
MoveActorBody::HasBitSetters::position(const MoveActorBody* msg) {
  return *msg->position_;
}
const ::tbMath::Mat3Message&
MoveActorBody::HasBitSetters::rotation(const MoveActorBody* msg) {
  return *msg->rotation_;
}
void MoveActorBody::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void MoveActorBody::clear_rotation() {
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveActorBody::kIdFieldNumber;
const int MoveActorBody::kPositionFieldNumber;
const int MoveActorBody::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveActorBody::MoveActorBody()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.MoveActorBody)
}
MoveActorBody::MoveActorBody(const MoveActorBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::tbMath::Vec3Message(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_rotation()) {
    rotation_ = new ::tbMath::Mat3Message(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.MoveActorBody)
}

void MoveActorBody::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoveActorBody_basic_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(id_));
}

MoveActorBody::~MoveActorBody() {
  // @@protoc_insertion_point(destructor:tbBasics.MoveActorBody)
  SharedDtor();
}

void MoveActorBody::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void MoveActorBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoveActorBody& MoveActorBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoveActorBody_basic_2eproto.base);
  return *internal_default_instance();
}


void MoveActorBody::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.MoveActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoveActorBody::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoveActorBody*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .tbMath.Vec3Message position = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Vec3Message::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .tbMath.Mat3Message rotation = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Mat3Message::_InternalParse;
        object = msg->mutable_rotation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoveActorBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.MoveActorBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Vec3Message position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Mat3Message rotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.MoveActorBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.MoveActorBody)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoveActorBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.MoveActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .tbMath.Vec3Message position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::position(this), output);
  }

  // .tbMath.Mat3Message rotation = 3;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::rotation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.MoveActorBody)
}

::google::protobuf::uint8* MoveActorBody::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.MoveActorBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .tbMath.Vec3Message position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::position(this), target);
  }

  // .tbMath.Mat3Message rotation = 3;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::rotation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.MoveActorBody)
  return target;
}

size_t MoveActorBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.MoveActorBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tbMath.Vec3Message position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .tbMath.Mat3Message rotation = 3;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveActorBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.MoveActorBody)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveActorBody* source =
      ::google::protobuf::DynamicCastToGenerated<MoveActorBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.MoveActorBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.MoveActorBody)
    MergeFrom(*source);
  }
}

void MoveActorBody::MergeFrom(const MoveActorBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.MoveActorBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::tbMath::Vec3Message::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::tbMath::Mat3Message::MergeFrom(from.rotation());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MoveActorBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.MoveActorBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveActorBody::CopyFrom(const MoveActorBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.MoveActorBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveActorBody::IsInitialized() const {
  return true;
}

void MoveActorBody::Swap(MoveActorBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveActorBody::InternalSwap(MoveActorBody* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata MoveActorBody::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetActorAnimationBody::InitAsDefaultInstance() {
}
class SetActorAnimationBody::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetActorAnimationBody::kIdFieldNumber;
const int SetActorAnimationBody::kAnimationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetActorAnimationBody::SetActorAnimationBody()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.SetActorAnimationBody)
}
SetActorAnimationBody::SetActorAnimationBody(const SetActorAnimationBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  animation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.animation().size() > 0) {
    animation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.animation_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tbBasics.SetActorAnimationBody)
}

void SetActorAnimationBody::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetActorAnimationBody_basic_2eproto.base);
  animation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

SetActorAnimationBody::~SetActorAnimationBody() {
  // @@protoc_insertion_point(destructor:tbBasics.SetActorAnimationBody)
  SharedDtor();
}

void SetActorAnimationBody::SharedDtor() {
  animation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetActorAnimationBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetActorAnimationBody& SetActorAnimationBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetActorAnimationBody_basic_2eproto.base);
  return *internal_default_instance();
}


void SetActorAnimationBody::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.SetActorAnimationBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  animation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetActorAnimationBody::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetActorAnimationBody*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string animation = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("tbBasics.SetActorAnimationBody.animation");
        object = msg->mutable_animation();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetActorAnimationBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.SetActorAnimationBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string animation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_animation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->animation().data(), static_cast<int>(this->animation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tbBasics.SetActorAnimationBody.animation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.SetActorAnimationBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.SetActorAnimationBody)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetActorAnimationBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.SetActorAnimationBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string animation = 2;
  if (this->animation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->animation().data(), static_cast<int>(this->animation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.SetActorAnimationBody.animation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->animation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.SetActorAnimationBody)
}

::google::protobuf::uint8* SetActorAnimationBody::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.SetActorAnimationBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string animation = 2;
  if (this->animation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->animation().data(), static_cast<int>(this->animation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tbBasics.SetActorAnimationBody.animation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->animation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.SetActorAnimationBody)
  return target;
}

size_t SetActorAnimationBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.SetActorAnimationBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string animation = 2;
  if (this->animation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->animation());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActorAnimationBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.SetActorAnimationBody)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActorAnimationBody* source =
      ::google::protobuf::DynamicCastToGenerated<SetActorAnimationBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.SetActorAnimationBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.SetActorAnimationBody)
    MergeFrom(*source);
  }
}

void SetActorAnimationBody::MergeFrom(const SetActorAnimationBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.SetActorAnimationBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.animation().size() > 0) {

    animation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.animation_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void SetActorAnimationBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.SetActorAnimationBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActorAnimationBody::CopyFrom(const SetActorAnimationBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.SetActorAnimationBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActorAnimationBody::IsInitialized() const {
  return true;
}

void SetActorAnimationBody::Swap(SetActorAnimationBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetActorAnimationBody::InternalSwap(SetActorAnimationBody* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  animation_.Swap(&other->animation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

::google::protobuf::Metadata SetActorAnimationBody::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ApplyPhysicsBody::InitAsDefaultInstance() {
  ::tbBasics::_ApplyPhysicsBody_default_instance_._instance.get_mutable()->direction_ = const_cast< ::tbMath::Vec3Message*>(
      ::tbMath::Vec3Message::internal_default_instance());
}
class ApplyPhysicsBody::HasBitSetters {
 public:
  static const ::tbMath::Vec3Message& direction(const ApplyPhysicsBody* msg);
};

const ::tbMath::Vec3Message&
ApplyPhysicsBody::HasBitSetters::direction(const ApplyPhysicsBody* msg) {
  return *msg->direction_;
}
void ApplyPhysicsBody::clear_direction() {
  if (GetArenaNoVirtual() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyPhysicsBody::kIdFieldNumber;
const int ApplyPhysicsBody::kMagnitudeFieldNumber;
const int ApplyPhysicsBody::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyPhysicsBody::ApplyPhysicsBody()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tbBasics.ApplyPhysicsBody)
}
ApplyPhysicsBody::ApplyPhysicsBody(const ApplyPhysicsBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_direction()) {
    direction_ = new ::tbMath::Vec3Message(*from.direction_);
  } else {
    direction_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&magnitude_) -
    reinterpret_cast<char*>(&id_)) + sizeof(magnitude_));
  // @@protoc_insertion_point(copy_constructor:tbBasics.ApplyPhysicsBody)
}

void ApplyPhysicsBody::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApplyPhysicsBody_basic_2eproto.base);
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&magnitude_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(magnitude_));
}

ApplyPhysicsBody::~ApplyPhysicsBody() {
  // @@protoc_insertion_point(destructor:tbBasics.ApplyPhysicsBody)
  SharedDtor();
}

void ApplyPhysicsBody::SharedDtor() {
  if (this != internal_default_instance()) delete direction_;
}

void ApplyPhysicsBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplyPhysicsBody& ApplyPhysicsBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApplyPhysicsBody_basic_2eproto.base);
  return *internal_default_instance();
}


void ApplyPhysicsBody::Clear() {
// @@protoc_insertion_point(message_clear_start:tbBasics.ApplyPhysicsBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&magnitude_) -
      reinterpret_cast<char*>(&id_)) + sizeof(magnitude_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplyPhysicsBody::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApplyPhysicsBody*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float magnitude = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_magnitude(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // .tbMath.Vec3Message direction = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::tbMath::Vec3Message::_InternalParse;
        object = msg->mutable_direction();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplyPhysicsBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tbBasics.ApplyPhysicsBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float magnitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &magnitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tbMath.Vec3Message direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tbBasics.ApplyPhysicsBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tbBasics.ApplyPhysicsBody)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplyPhysicsBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tbBasics.ApplyPhysicsBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->magnitude(), output);
  }

  // .tbMath.Vec3Message direction = 3;
  if (this->has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::direction(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tbBasics.ApplyPhysicsBody)
}

::google::protobuf::uint8* ApplyPhysicsBody::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tbBasics.ApplyPhysicsBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->magnitude(), target);
  }

  // .tbMath.Vec3Message direction = 3;
  if (this->has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::direction(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tbBasics.ApplyPhysicsBody)
  return target;
}

size_t ApplyPhysicsBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tbBasics.ApplyPhysicsBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tbMath.Vec3Message direction = 3;
  if (this->has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyPhysicsBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tbBasics.ApplyPhysicsBody)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyPhysicsBody* source =
      ::google::protobuf::DynamicCastToGenerated<ApplyPhysicsBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tbBasics.ApplyPhysicsBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tbBasics.ApplyPhysicsBody)
    MergeFrom(*source);
  }
}

void ApplyPhysicsBody::MergeFrom(const ApplyPhysicsBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tbBasics.ApplyPhysicsBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_direction()) {
    mutable_direction()->::tbMath::Vec3Message::MergeFrom(from.direction());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.magnitude() != 0) {
    set_magnitude(from.magnitude());
  }
}

void ApplyPhysicsBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tbBasics.ApplyPhysicsBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyPhysicsBody::CopyFrom(const ApplyPhysicsBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tbBasics.ApplyPhysicsBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyPhysicsBody::IsInitialized() const {
  return true;
}

void ApplyPhysicsBody::Swap(ApplyPhysicsBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyPhysicsBody::InternalSwap(ApplyPhysicsBody* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(direction_, other->direction_);
  swap(id_, other->id_);
  swap(magnitude_, other->magnitude_);
}

::google::protobuf::Metadata ApplyPhysicsBody::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tbBasics
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::tbBasics::CreateActorBody* Arena::CreateMaybeMessage< ::tbBasics::CreateActorBody >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::CreateActorBody >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::DeleteActorBody* Arena::CreateMaybeMessage< ::tbBasics::DeleteActorBody >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::DeleteActorBody >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::SetCameraBody* Arena::CreateMaybeMessage< ::tbBasics::SetCameraBody >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::SetCameraBody >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::MoveActorBody* Arena::CreateMaybeMessage< ::tbBasics::MoveActorBody >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::MoveActorBody >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::SetActorAnimationBody* Arena::CreateMaybeMessage< ::tbBasics::SetActorAnimationBody >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::SetActorAnimationBody >(arena);
}
template<> PROTOBUF_NOINLINE ::tbBasics::ApplyPhysicsBody* Arena::CreateMaybeMessage< ::tbBasics::ApplyPhysicsBody >(Arena* arena) {
  return Arena::CreateInternal< ::tbBasics::ApplyPhysicsBody >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
