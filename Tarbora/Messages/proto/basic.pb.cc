// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basic.proto

#include "basic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_math_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vec3_math_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_math_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Mat3_math_2eproto;
namespace MessageContent {
class ActorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Actor> _instance;
} _Actor_default_instance_;
class NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Node> _instance;
} _Node_default_instance_;
class CreateActorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateActor> _instance;
} _CreateActor_default_instance_;
class MoveActorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveActor> _instance;
} _MoveActor_default_instance_;
class MoveNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveNode> _instance;
} _MoveNode_default_instance_;
class SetAnimationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetAnimation> _instance;
} _SetAnimation_default_instance_;
class ApplyPhysicsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplyPhysics> _instance;
} _ApplyPhysics_default_instance_;
class LookAtDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LookAt> _instance;
} _LookAt_default_instance_;
}  // namespace MessageContent
static void InitDefaultsActor_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageContent::_Actor_default_instance_;
    new (ptr) ::MessageContent::Actor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageContent::Actor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Actor_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActor_basic_2eproto}, {}};

static void InitDefaultsNode_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageContent::_Node_default_instance_;
    new (ptr) ::MessageContent::Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageContent::Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Node_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNode_basic_2eproto}, {}};

static void InitDefaultsCreateActor_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageContent::_CreateActor_default_instance_;
    new (ptr) ::MessageContent::CreateActor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageContent::CreateActor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateActor_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateActor_basic_2eproto}, {
      &scc_info_Vec3_math_2eproto.base,}};

static void InitDefaultsMoveActor_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageContent::_MoveActor_default_instance_;
    new (ptr) ::MessageContent::MoveActor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageContent::MoveActor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MoveActor_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMoveActor_basic_2eproto}, {
      &scc_info_Vec3_math_2eproto.base,
      &scc_info_Mat3_math_2eproto.base,}};

static void InitDefaultsMoveNode_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageContent::_MoveNode_default_instance_;
    new (ptr) ::MessageContent::MoveNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageContent::MoveNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoveNode_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoveNode_basic_2eproto}, {
      &scc_info_Vec3_math_2eproto.base,}};

static void InitDefaultsSetAnimation_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageContent::_SetAnimation_default_instance_;
    new (ptr) ::MessageContent::SetAnimation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageContent::SetAnimation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetAnimation_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetAnimation_basic_2eproto}, {}};

static void InitDefaultsApplyPhysics_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageContent::_ApplyPhysics_default_instance_;
    new (ptr) ::MessageContent::ApplyPhysics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageContent::ApplyPhysics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApplyPhysics_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApplyPhysics_basic_2eproto}, {
      &scc_info_Vec3_math_2eproto.base,}};

static void InitDefaultsLookAt_basic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MessageContent::_LookAt_default_instance_;
    new (ptr) ::MessageContent::LookAt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageContent::LookAt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LookAt_basic_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLookAt_basic_2eproto}, {
      &scc_info_Vec3_math_2eproto.base,}};

void InitDefaults_basic_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Actor_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Node_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateActor_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveActor_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveNode_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetAnimation_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplyPhysics_basic_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LookAt_basic_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_basic_2eproto[8];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_basic_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_basic_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_basic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageContent::Actor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageContent::Actor, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageContent::Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageContent::Node, id_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::Node, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageContent::CreateActor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageContent::CreateActor, id_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::CreateActor, entity_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::CreateActor, variant_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::CreateActor, position_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::CreateActor, rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveActor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveActor, id_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveActor, position_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveActor, rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveNode, id_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveNode, name_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveNode, position_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::MoveNode, rotation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageContent::SetAnimation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageContent::SetAnimation, id_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::SetAnimation, animation_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::SetAnimation, file_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::SetAnimation, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageContent::ApplyPhysics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageContent::ApplyPhysics, id_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::ApplyPhysics, magnitude_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::ApplyPhysics, direction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MessageContent::LookAt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MessageContent::LookAt, id_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::LookAt, target_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::LookAt, distance_),
  PROTOBUF_FIELD_OFFSET(::MessageContent::LookAt, direction_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MessageContent::Actor)},
  { 6, -1, sizeof(::MessageContent::Node)},
  { 13, -1, sizeof(::MessageContent::CreateActor)},
  { 23, -1, sizeof(::MessageContent::MoveActor)},
  { 31, -1, sizeof(::MessageContent::MoveNode)},
  { 40, -1, sizeof(::MessageContent::SetAnimation)},
  { 49, -1, sizeof(::MessageContent::ApplyPhysics)},
  { 57, -1, sizeof(::MessageContent::LookAt)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageContent::_Actor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageContent::_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageContent::_CreateActor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageContent::_MoveActor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageContent::_MoveNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageContent::_SetAnimation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageContent::_ApplyPhysics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MessageContent::_LookAt_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_basic_2eproto = {
  {}, AddDescriptors_basic_2eproto, "basic.proto", schemas,
  file_default_instances, TableStruct_basic_2eproto::offsets,
  file_level_metadata_basic_2eproto, 8, file_level_enum_descriptors_basic_2eproto, file_level_service_descriptors_basic_2eproto,
};

const char descriptor_table_protodef_basic_2eproto[] =
  "\n\013basic.proto\022\016MessageContent\032\nmath.prot"
  "o\"\023\n\005Actor\022\n\n\002id\030\001 \001(\t\" \n\004Node\022\n\n\002id\030\001 \001"
  "(\t\022\014\n\004name\030\002 \001(\t\"\204\001\n\013CreateActor\022\n\n\002id\030\001"
  " \001(\t\022\016\n\006entity\030\002 \001(\t\022\017\n\007variant\030\003 \001(\t\022#\n"
  "\010position\030\004 \001(\0132\021.MathMessage.Vec3\022#\n\010ro"
  "tation\030\005 \001(\0132\021.MathMessage.Vec3\"a\n\tMoveA"
  "ctor\022\n\n\002id\030\001 \001(\t\022#\n\010position\030\002 \001(\0132\021.Mat"
  "hMessage.Vec3\022#\n\010rotation\030\003 \001(\0132\021.MathMe"
  "ssage.Mat3\"n\n\010MoveNode\022\n\n\002id\030\001 \001(\t\022\014\n\004na"
  "me\030\002 \001(\t\022#\n\010position\030\003 \001(\0132\021.MathMessage"
  ".Vec3\022#\n\010rotation\030\004 \001(\0132\021.MathMessage.Ve"
  "c3\"J\n\014SetAnimation\022\n\n\002id\030\001 \001(\t\022\021\n\tanimat"
  "ion\030\002 \001(\t\022\014\n\004file\030\003 \001(\t\022\r\n\005speed\030\004 \001(\002\"S"
  "\n\014ApplyPhysics\022\n\n\002id\030\001 \001(\t\022\021\n\tmagnitude\030"
  "\002 \001(\002\022$\n\tdirection\030\003 \001(\0132\021.MathMessage.V"
  "ec3\"\\\n\006LookAt\022\n\n\002id\030\001 \001(\t\022\016\n\006target\030\002 \001("
  "\t\022\020\n\010distance\030\003 \001(\002\022$\n\tdirection\030\004 \001(\0132\021"
  ".MathMessage.Vec3b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_basic_2eproto = {
  false, InitDefaults_basic_2eproto, 
  descriptor_table_protodef_basic_2eproto,
  "basic.proto", &assign_descriptors_table_basic_2eproto, 705,
};

void AddDescriptors_basic_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_math_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_basic_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_basic_2eproto = []() { AddDescriptors_basic_2eproto(); return true; }();
namespace MessageContent {

// ===================================================================

void Actor::InitAsDefaultInstance() {
}
class Actor::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Actor::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Actor::Actor()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageContent.Actor)
}
Actor::Actor(const Actor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:MessageContent.Actor)
}

void Actor::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Actor_basic_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Actor::~Actor() {
  // @@protoc_insertion_point(destructor:MessageContent.Actor)
  SharedDtor();
}

void Actor::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Actor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Actor& Actor::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Actor_basic_2eproto.base);
  return *internal_default_instance();
}


void Actor::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent.Actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Actor::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Actor*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.Actor.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Actor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageContent.Actor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.Actor.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageContent.Actor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageContent.Actor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Actor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageContent.Actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.Actor.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageContent.Actor)
}

::google::protobuf::uint8* Actor::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageContent.Actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.Actor.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageContent.Actor)
  return target;
}

size_t Actor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageContent.Actor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Actor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageContent.Actor)
  GOOGLE_DCHECK_NE(&from, this);
  const Actor* source =
      ::google::protobuf::DynamicCastToGenerated<Actor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageContent.Actor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageContent.Actor)
    MergeFrom(*source);
  }
}

void Actor::MergeFrom(const Actor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageContent.Actor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void Actor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageContent.Actor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Actor::CopyFrom(const Actor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent.Actor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Actor::IsInitialized() const {
  return true;
}

void Actor::Swap(Actor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Actor::InternalSwap(Actor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Actor::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Node::InitAsDefaultInstance() {
}
class Node::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageContent.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:MessageContent.Node)
}

void Node::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Node_basic_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:MessageContent.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Node& Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Node_basic_2eproto.base);
  return *internal_default_instance();
}


void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Node::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Node*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.Node.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.Node.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageContent.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.Node.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.Node.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageContent.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageContent.Node)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageContent.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.Node.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.Node.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageContent.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageContent.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.Node.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.Node.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageContent.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageContent.Node)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageContent.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::DynamicCastToGenerated<Node>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageContent.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageContent.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageContent.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageContent.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Node::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateActor::InitAsDefaultInstance() {
  ::MessageContent::_CreateActor_default_instance_._instance.get_mutable()->position_ = const_cast< ::MathMessage::Vec3*>(
      ::MathMessage::Vec3::internal_default_instance());
  ::MessageContent::_CreateActor_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::MathMessage::Vec3*>(
      ::MathMessage::Vec3::internal_default_instance());
}
class CreateActor::HasBitSetters {
 public:
  static const ::MathMessage::Vec3& position(const CreateActor* msg);
  static const ::MathMessage::Vec3& rotation(const CreateActor* msg);
};

const ::MathMessage::Vec3&
CreateActor::HasBitSetters::position(const CreateActor* msg) {
  return *msg->position_;
}
const ::MathMessage::Vec3&
CreateActor::HasBitSetters::rotation(const CreateActor* msg) {
  return *msg->rotation_;
}
void CreateActor::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void CreateActor::clear_rotation() {
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateActor::kIdFieldNumber;
const int CreateActor::kEntityFieldNumber;
const int CreateActor::kVariantFieldNumber;
const int CreateActor::kPositionFieldNumber;
const int CreateActor::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateActor::CreateActor()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageContent.CreateActor)
}
CreateActor::CreateActor(const CreateActor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity().size() > 0) {
    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  variant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.variant().size() > 0) {
    variant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variant_);
  }
  if (from.has_position()) {
    position_ = new ::MathMessage::Vec3(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_rotation()) {
    rotation_ = new ::MathMessage::Vec3(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MessageContent.CreateActor)
}

void CreateActor::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateActor_basic_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(rotation_));
}

CreateActor::~CreateActor() {
  // @@protoc_insertion_point(destructor:MessageContent.CreateActor)
  SharedDtor();
}

void CreateActor::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void CreateActor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateActor& CreateActor::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateActor_basic_2eproto.base);
  return *internal_default_instance();
}


void CreateActor::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent.CreateActor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  variant_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateActor::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateActor*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.CreateActor.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string entity = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.CreateActor.entity");
        object = msg->mutable_entity();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string variant = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.CreateActor.variant");
        object = msg->mutable_variant();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .MathMessage.Vec3 position = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MathMessage::Vec3::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .MathMessage.Vec3 rotation = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MathMessage::Vec3::_InternalParse;
        object = msg->mutable_rotation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateActor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageContent.CreateActor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.CreateActor.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entity().data(), static_cast<int>(this->entity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.CreateActor.entity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string variant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_variant()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->variant().data(), static_cast<int>(this->variant().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.CreateActor.variant"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MathMessage.Vec3 position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MathMessage.Vec3 rotation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageContent.CreateActor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageContent.CreateActor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateActor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageContent.CreateActor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.CreateActor.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string entity = 2;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), static_cast<int>(this->entity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.CreateActor.entity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->entity(), output);
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variant().data(), static_cast<int>(this->variant().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.CreateActor.variant");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->variant(), output);
  }

  // .MathMessage.Vec3 position = 4;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::position(this), output);
  }

  // .MathMessage.Vec3 rotation = 5;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::rotation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageContent.CreateActor)
}

::google::protobuf::uint8* CreateActor::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageContent.CreateActor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.CreateActor.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string entity = 2;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), static_cast<int>(this->entity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.CreateActor.entity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->entity(), target);
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->variant().data(), static_cast<int>(this->variant().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.CreateActor.variant");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->variant(), target);
  }

  // .MathMessage.Vec3 position = 4;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::position(this), target);
  }

  // .MathMessage.Vec3 rotation = 5;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::rotation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageContent.CreateActor)
  return target;
}

size_t CreateActor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageContent.CreateActor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string entity = 2;
  if (this->entity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entity());
  }

  // string variant = 3;
  if (this->variant().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->variant());
  }

  // .MathMessage.Vec3 position = 4;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .MathMessage.Vec3 rotation = 5;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateActor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageContent.CreateActor)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateActor* source =
      ::google::protobuf::DynamicCastToGenerated<CreateActor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageContent.CreateActor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageContent.CreateActor)
    MergeFrom(*source);
  }
}

void CreateActor::MergeFrom(const CreateActor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageContent.CreateActor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.entity().size() > 0) {

    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  if (from.variant().size() > 0) {

    variant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variant_);
  }
  if (from.has_position()) {
    mutable_position()->::MathMessage::Vec3::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::MathMessage::Vec3::MergeFrom(from.rotation());
  }
}

void CreateActor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageContent.CreateActor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateActor::CopyFrom(const CreateActor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent.CreateActor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateActor::IsInitialized() const {
  return true;
}

void CreateActor::Swap(CreateActor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateActor::InternalSwap(CreateActor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  entity_.Swap(&other->entity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  variant_.Swap(&other->variant_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
}

::google::protobuf::Metadata CreateActor::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoveActor::InitAsDefaultInstance() {
  ::MessageContent::_MoveActor_default_instance_._instance.get_mutable()->position_ = const_cast< ::MathMessage::Vec3*>(
      ::MathMessage::Vec3::internal_default_instance());
  ::MessageContent::_MoveActor_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::MathMessage::Mat3*>(
      ::MathMessage::Mat3::internal_default_instance());
}
class MoveActor::HasBitSetters {
 public:
  static const ::MathMessage::Vec3& position(const MoveActor* msg);
  static const ::MathMessage::Mat3& rotation(const MoveActor* msg);
};

const ::MathMessage::Vec3&
MoveActor::HasBitSetters::position(const MoveActor* msg) {
  return *msg->position_;
}
const ::MathMessage::Mat3&
MoveActor::HasBitSetters::rotation(const MoveActor* msg) {
  return *msg->rotation_;
}
void MoveActor::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void MoveActor::clear_rotation() {
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveActor::kIdFieldNumber;
const int MoveActor::kPositionFieldNumber;
const int MoveActor::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveActor::MoveActor()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageContent.MoveActor)
}
MoveActor::MoveActor(const MoveActor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_position()) {
    position_ = new ::MathMessage::Vec3(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_rotation()) {
    rotation_ = new ::MathMessage::Mat3(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MessageContent.MoveActor)
}

void MoveActor::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoveActor_basic_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(rotation_));
}

MoveActor::~MoveActor() {
  // @@protoc_insertion_point(destructor:MessageContent.MoveActor)
  SharedDtor();
}

void MoveActor::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void MoveActor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoveActor& MoveActor::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoveActor_basic_2eproto.base);
  return *internal_default_instance();
}


void MoveActor::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent.MoveActor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoveActor::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoveActor*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.MoveActor.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .MathMessage.Vec3 position = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MathMessage::Vec3::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .MathMessage.Mat3 rotation = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MathMessage::Mat3::_InternalParse;
        object = msg->mutable_rotation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoveActor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageContent.MoveActor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.MoveActor.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MathMessage.Vec3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MathMessage.Mat3 rotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageContent.MoveActor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageContent.MoveActor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoveActor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageContent.MoveActor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.MoveActor.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .MathMessage.Vec3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::position(this), output);
  }

  // .MathMessage.Mat3 rotation = 3;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::rotation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageContent.MoveActor)
}

::google::protobuf::uint8* MoveActor::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageContent.MoveActor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.MoveActor.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .MathMessage.Vec3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::position(this), target);
  }

  // .MathMessage.Mat3 rotation = 3;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::rotation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageContent.MoveActor)
  return target;
}

size_t MoveActor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageContent.MoveActor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .MathMessage.Vec3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .MathMessage.Mat3 rotation = 3;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveActor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageContent.MoveActor)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveActor* source =
      ::google::protobuf::DynamicCastToGenerated<MoveActor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageContent.MoveActor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageContent.MoveActor)
    MergeFrom(*source);
  }
}

void MoveActor::MergeFrom(const MoveActor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageContent.MoveActor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_position()) {
    mutable_position()->::MathMessage::Vec3::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::MathMessage::Mat3::MergeFrom(from.rotation());
  }
}

void MoveActor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageContent.MoveActor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveActor::CopyFrom(const MoveActor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent.MoveActor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveActor::IsInitialized() const {
  return true;
}

void MoveActor::Swap(MoveActor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveActor::InternalSwap(MoveActor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
}

::google::protobuf::Metadata MoveActor::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoveNode::InitAsDefaultInstance() {
  ::MessageContent::_MoveNode_default_instance_._instance.get_mutable()->position_ = const_cast< ::MathMessage::Vec3*>(
      ::MathMessage::Vec3::internal_default_instance());
  ::MessageContent::_MoveNode_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::MathMessage::Vec3*>(
      ::MathMessage::Vec3::internal_default_instance());
}
class MoveNode::HasBitSetters {
 public:
  static const ::MathMessage::Vec3& position(const MoveNode* msg);
  static const ::MathMessage::Vec3& rotation(const MoveNode* msg);
};

const ::MathMessage::Vec3&
MoveNode::HasBitSetters::position(const MoveNode* msg) {
  return *msg->position_;
}
const ::MathMessage::Vec3&
MoveNode::HasBitSetters::rotation(const MoveNode* msg) {
  return *msg->rotation_;
}
void MoveNode::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void MoveNode::clear_rotation() {
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveNode::kIdFieldNumber;
const int MoveNode::kNameFieldNumber;
const int MoveNode::kPositionFieldNumber;
const int MoveNode::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveNode::MoveNode()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageContent.MoveNode)
}
MoveNode::MoveNode(const MoveNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_position()) {
    position_ = new ::MathMessage::Vec3(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_rotation()) {
    rotation_ = new ::MathMessage::Vec3(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MessageContent.MoveNode)
}

void MoveNode::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoveNode_basic_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(rotation_));
}

MoveNode::~MoveNode() {
  // @@protoc_insertion_point(destructor:MessageContent.MoveNode)
  SharedDtor();
}

void MoveNode::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void MoveNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoveNode& MoveNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoveNode_basic_2eproto.base);
  return *internal_default_instance();
}


void MoveNode::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent.MoveNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoveNode::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoveNode*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.MoveNode.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.MoveNode.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .MathMessage.Vec3 position = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MathMessage::Vec3::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .MathMessage.Vec3 rotation = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MathMessage::Vec3::_InternalParse;
        object = msg->mutable_rotation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoveNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageContent.MoveNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.MoveNode.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.MoveNode.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MathMessage.Vec3 position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MathMessage.Vec3 rotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageContent.MoveNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageContent.MoveNode)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoveNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageContent.MoveNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.MoveNode.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.MoveNode.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .MathMessage.Vec3 position = 3;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::position(this), output);
  }

  // .MathMessage.Vec3 rotation = 4;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::rotation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageContent.MoveNode)
}

::google::protobuf::uint8* MoveNode::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageContent.MoveNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.MoveNode.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.MoveNode.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .MathMessage.Vec3 position = 3;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::position(this), target);
  }

  // .MathMessage.Vec3 rotation = 4;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::rotation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageContent.MoveNode)
  return target;
}

size_t MoveNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageContent.MoveNode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .MathMessage.Vec3 position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .MathMessage.Vec3 rotation = 4;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageContent.MoveNode)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveNode* source =
      ::google::protobuf::DynamicCastToGenerated<MoveNode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageContent.MoveNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageContent.MoveNode)
    MergeFrom(*source);
  }
}

void MoveNode::MergeFrom(const MoveNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageContent.MoveNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_position()) {
    mutable_position()->::MathMessage::Vec3::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::MathMessage::Vec3::MergeFrom(from.rotation());
  }
}

void MoveNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageContent.MoveNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveNode::CopyFrom(const MoveNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent.MoveNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveNode::IsInitialized() const {
  return true;
}

void MoveNode::Swap(MoveNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveNode::InternalSwap(MoveNode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
}

::google::protobuf::Metadata MoveNode::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetAnimation::InitAsDefaultInstance() {
}
class SetAnimation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAnimation::kIdFieldNumber;
const int SetAnimation::kAnimationFieldNumber;
const int SetAnimation::kFileFieldNumber;
const int SetAnimation::kSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAnimation::SetAnimation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageContent.SetAnimation)
}
SetAnimation::SetAnimation(const SetAnimation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  animation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.animation().size() > 0) {
    animation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.animation_);
  }
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:MessageContent.SetAnimation)
}

void SetAnimation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetAnimation_basic_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  animation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
}

SetAnimation::~SetAnimation() {
  // @@protoc_insertion_point(destructor:MessageContent.SetAnimation)
  SharedDtor();
}

void SetAnimation::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  animation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetAnimation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAnimation& SetAnimation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetAnimation_basic_2eproto.base);
  return *internal_default_instance();
}


void SetAnimation::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent.SetAnimation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  animation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetAnimation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetAnimation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.SetAnimation.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string animation = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.SetAnimation.animation");
        object = msg->mutable_animation();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.SetAnimation.file");
        object = msg->mutable_file();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float speed = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetAnimation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageContent.SetAnimation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.SetAnimation.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string animation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_animation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->animation().data(), static_cast<int>(this->animation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.SetAnimation.animation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.SetAnimation.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageContent.SetAnimation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageContent.SetAnimation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetAnimation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageContent.SetAnimation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.SetAnimation.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string animation = 2;
  if (this->animation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->animation().data(), static_cast<int>(this->animation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.SetAnimation.animation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->animation(), output);
  }

  // string file = 3;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.SetAnimation.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file(), output);
  }

  // float speed = 4;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageContent.SetAnimation)
}

::google::protobuf::uint8* SetAnimation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageContent.SetAnimation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.SetAnimation.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string animation = 2;
  if (this->animation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->animation().data(), static_cast<int>(this->animation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.SetAnimation.animation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->animation(), target);
  }

  // string file = 3;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.SetAnimation.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file(), target);
  }

  // float speed = 4;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageContent.SetAnimation)
  return target;
}

size_t SetAnimation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageContent.SetAnimation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string animation = 2;
  if (this->animation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->animation());
  }

  // string file = 3;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // float speed = 4;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAnimation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageContent.SetAnimation)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAnimation* source =
      ::google::protobuf::DynamicCastToGenerated<SetAnimation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageContent.SetAnimation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageContent.SetAnimation)
    MergeFrom(*source);
  }
}

void SetAnimation::MergeFrom(const SetAnimation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageContent.SetAnimation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.animation().size() > 0) {

    animation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.animation_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void SetAnimation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageContent.SetAnimation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAnimation::CopyFrom(const SetAnimation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent.SetAnimation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAnimation::IsInitialized() const {
  return true;
}

void SetAnimation::Swap(SetAnimation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAnimation::InternalSwap(SetAnimation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  animation_.Swap(&other->animation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(speed_, other->speed_);
}

::google::protobuf::Metadata SetAnimation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ApplyPhysics::InitAsDefaultInstance() {
  ::MessageContent::_ApplyPhysics_default_instance_._instance.get_mutable()->direction_ = const_cast< ::MathMessage::Vec3*>(
      ::MathMessage::Vec3::internal_default_instance());
}
class ApplyPhysics::HasBitSetters {
 public:
  static const ::MathMessage::Vec3& direction(const ApplyPhysics* msg);
};

const ::MathMessage::Vec3&
ApplyPhysics::HasBitSetters::direction(const ApplyPhysics* msg) {
  return *msg->direction_;
}
void ApplyPhysics::clear_direction() {
  if (GetArenaNoVirtual() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyPhysics::kIdFieldNumber;
const int ApplyPhysics::kMagnitudeFieldNumber;
const int ApplyPhysics::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyPhysics::ApplyPhysics()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageContent.ApplyPhysics)
}
ApplyPhysics::ApplyPhysics(const ApplyPhysics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_direction()) {
    direction_ = new ::MathMessage::Vec3(*from.direction_);
  } else {
    direction_ = nullptr;
  }
  magnitude_ = from.magnitude_;
  // @@protoc_insertion_point(copy_constructor:MessageContent.ApplyPhysics)
}

void ApplyPhysics::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApplyPhysics_basic_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&magnitude_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(magnitude_));
}

ApplyPhysics::~ApplyPhysics() {
  // @@protoc_insertion_point(destructor:MessageContent.ApplyPhysics)
  SharedDtor();
}

void ApplyPhysics::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete direction_;
}

void ApplyPhysics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplyPhysics& ApplyPhysics::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApplyPhysics_basic_2eproto.base);
  return *internal_default_instance();
}


void ApplyPhysics::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent.ApplyPhysics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
  magnitude_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplyPhysics::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApplyPhysics*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.ApplyPhysics.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float magnitude = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_magnitude(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // .MathMessage.Vec3 direction = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MathMessage::Vec3::_InternalParse;
        object = msg->mutable_direction();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplyPhysics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageContent.ApplyPhysics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.ApplyPhysics.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float magnitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &magnitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MathMessage.Vec3 direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageContent.ApplyPhysics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageContent.ApplyPhysics)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplyPhysics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageContent.ApplyPhysics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.ApplyPhysics.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->magnitude(), output);
  }

  // .MathMessage.Vec3 direction = 3;
  if (this->has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::direction(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageContent.ApplyPhysics)
}

::google::protobuf::uint8* ApplyPhysics::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageContent.ApplyPhysics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.ApplyPhysics.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->magnitude(), target);
  }

  // .MathMessage.Vec3 direction = 3;
  if (this->has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::direction(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageContent.ApplyPhysics)
  return target;
}

size_t ApplyPhysics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageContent.ApplyPhysics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .MathMessage.Vec3 direction = 3;
  if (this->has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);
  }

  // float magnitude = 2;
  if (this->magnitude() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyPhysics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageContent.ApplyPhysics)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyPhysics* source =
      ::google::protobuf::DynamicCastToGenerated<ApplyPhysics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageContent.ApplyPhysics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageContent.ApplyPhysics)
    MergeFrom(*source);
  }
}

void ApplyPhysics::MergeFrom(const ApplyPhysics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageContent.ApplyPhysics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_direction()) {
    mutable_direction()->::MathMessage::Vec3::MergeFrom(from.direction());
  }
  if (from.magnitude() != 0) {
    set_magnitude(from.magnitude());
  }
}

void ApplyPhysics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageContent.ApplyPhysics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyPhysics::CopyFrom(const ApplyPhysics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent.ApplyPhysics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyPhysics::IsInitialized() const {
  return true;
}

void ApplyPhysics::Swap(ApplyPhysics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyPhysics::InternalSwap(ApplyPhysics* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(direction_, other->direction_);
  swap(magnitude_, other->magnitude_);
}

::google::protobuf::Metadata ApplyPhysics::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LookAt::InitAsDefaultInstance() {
  ::MessageContent::_LookAt_default_instance_._instance.get_mutable()->direction_ = const_cast< ::MathMessage::Vec3*>(
      ::MathMessage::Vec3::internal_default_instance());
}
class LookAt::HasBitSetters {
 public:
  static const ::MathMessage::Vec3& direction(const LookAt* msg);
};

const ::MathMessage::Vec3&
LookAt::HasBitSetters::direction(const LookAt* msg) {
  return *msg->direction_;
}
void LookAt::clear_direction() {
  if (GetArenaNoVirtual() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookAt::kIdFieldNumber;
const int LookAt::kTargetFieldNumber;
const int LookAt::kDistanceFieldNumber;
const int LookAt::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookAt::LookAt()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageContent.LookAt)
}
LookAt::LookAt(const LookAt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target().size() > 0) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.has_direction()) {
    direction_ = new ::MathMessage::Vec3(*from.direction_);
  } else {
    direction_ = nullptr;
  }
  distance_ = from.distance_;
  // @@protoc_insertion_point(copy_constructor:MessageContent.LookAt)
}

void LookAt::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LookAt_basic_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(distance_));
}

LookAt::~LookAt() {
  // @@protoc_insertion_point(destructor:MessageContent.LookAt)
  SharedDtor();
}

void LookAt::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete direction_;
}

void LookAt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LookAt& LookAt::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LookAt_basic_2eproto.base);
  return *internal_default_instance();
}


void LookAt::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent.LookAt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
  distance_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LookAt::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LookAt*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.LookAt.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string target = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MessageContent.LookAt.target");
        object = msg->mutable_target();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float distance = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_distance(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // .MathMessage.Vec3 direction = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MathMessage::Vec3::_InternalParse;
        object = msg->mutable_direction();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LookAt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageContent.LookAt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.LookAt.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageContent.LookAt.target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float distance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MathMessage.Vec3 direction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageContent.LookAt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageContent.LookAt)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LookAt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageContent.LookAt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.LookAt.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.LookAt.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target(), output);
  }

  // float distance = 3;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->distance(), output);
  }

  // .MathMessage.Vec3 direction = 4;
  if (this->has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::direction(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageContent.LookAt)
}

::google::protobuf::uint8* LookAt::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageContent.LookAt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.LookAt.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageContent.LookAt.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target(), target);
  }

  // float distance = 3;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->distance(), target);
  }

  // .MathMessage.Vec3 direction = 4;
  if (this->has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::direction(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageContent.LookAt)
  return target;
}

size_t LookAt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageContent.LookAt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string target = 2;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  // .MathMessage.Vec3 direction = 4;
  if (this->has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);
  }

  // float distance = 3;
  if (this->distance() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LookAt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageContent.LookAt)
  GOOGLE_DCHECK_NE(&from, this);
  const LookAt* source =
      ::google::protobuf::DynamicCastToGenerated<LookAt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageContent.LookAt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageContent.LookAt)
    MergeFrom(*source);
  }
}

void LookAt::MergeFrom(const LookAt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageContent.LookAt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.has_direction()) {
    mutable_direction()->::MathMessage::Vec3::MergeFrom(from.direction());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
}

void LookAt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageContent.LookAt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookAt::CopyFrom(const LookAt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent.LookAt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookAt::IsInitialized() const {
  return true;
}

void LookAt::Swap(LookAt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookAt::InternalSwap(LookAt* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(direction_, other->direction_);
  swap(distance_, other->distance_);
}

::google::protobuf::Metadata LookAt::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_basic_2eproto);
  return ::file_level_metadata_basic_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace MessageContent
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::MessageContent::Actor* Arena::CreateMaybeMessage< ::MessageContent::Actor >(Arena* arena) {
  return Arena::CreateInternal< ::MessageContent::Actor >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageContent::Node* Arena::CreateMaybeMessage< ::MessageContent::Node >(Arena* arena) {
  return Arena::CreateInternal< ::MessageContent::Node >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageContent::CreateActor* Arena::CreateMaybeMessage< ::MessageContent::CreateActor >(Arena* arena) {
  return Arena::CreateInternal< ::MessageContent::CreateActor >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageContent::MoveActor* Arena::CreateMaybeMessage< ::MessageContent::MoveActor >(Arena* arena) {
  return Arena::CreateInternal< ::MessageContent::MoveActor >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageContent::MoveNode* Arena::CreateMaybeMessage< ::MessageContent::MoveNode >(Arena* arena) {
  return Arena::CreateInternal< ::MessageContent::MoveNode >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageContent::SetAnimation* Arena::CreateMaybeMessage< ::MessageContent::SetAnimation >(Arena* arena) {
  return Arena::CreateInternal< ::MessageContent::SetAnimation >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageContent::ApplyPhysics* Arena::CreateMaybeMessage< ::MessageContent::ApplyPhysics >(Arena* arena) {
  return Arena::CreateInternal< ::MessageContent::ApplyPhysics >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageContent::LookAt* Arena::CreateMaybeMessage< ::MessageContent::LookAt >(Arena* arena) {
  return Arena::CreateInternal< ::MessageContent::LookAt >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
